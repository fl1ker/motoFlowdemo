# Generated by Django 5.1.3 on 2024-12-10 13:47

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auctions', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('cars', '0003_car_dimensions_drivetrain_engineinformation_metacar_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExtendedUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(help_text="User's first name", max_length=50, verbose_name='First Name')),
                ('surname', models.CharField(help_text="User's last name", max_length=50, verbose_name='Last Name')),
                ('telephone', models.CharField(blank=True, help_text="User's telephone number", max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Phone number must be in the format +123456789 and up to 15 digits.', regex='^\\+?\\d{9,15}$')], verbose_name='Telephone')),
                ('email', models.EmailField(help_text="User's email address", max_length=254, unique=True, verbose_name='Email')),
                ('registration_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Date when the user registered', verbose_name='Registration Date')),
                ('last_login', models.DateTimeField(blank=True, help_text='Last time the user logged in', null=True, verbose_name='Last Login')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['surname', 'name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CarRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(blank=True, help_text='Desired car brand', max_length=50, null=True, verbose_name='Brand')),
                ('model', models.CharField(blank=True, help_text='Desired car model', max_length=50, null=True, verbose_name='Model')),
                ('budget', models.DecimalField(decimal_places=2, help_text='Maximum budget for the car', max_digits=10, verbose_name='Budget')),
                ('status', models.CharField(choices=[('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='IN_PROGRESS', help_text='Current status of the request', max_length=15, verbose_name='Status')),
                ('created_date', models.DateTimeField(auto_now_add=True, help_text='The date when the request was created', verbose_name='Created Date')),
                ('updated_date', models.DateTimeField(auto_now=True, help_text='The date when the request was last updated', verbose_name='Updated Date')),
                ('user', models.ForeignKey(help_text='The user who made the car request', on_delete=django.db.models.deletion.CASCADE, related_name='car_requests', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Car Request',
                'verbose_name_plural': 'Car Requests',
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='AuctionClicks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('click_count', models.PositiveIntegerField(default=0, help_text='The number of times the user clicked the auction', verbose_name='Click Count')),
                ('last_click_date', models.DateTimeField(default=django.utils.timezone.now, help_text='The date when the user last clicked the auction', verbose_name='Last Click Date')),
                ('auction', models.ForeignKey(help_text='The auction that was clicked', on_delete=django.db.models.deletion.CASCADE, related_name='user_clicks', to='auctions.auction', verbose_name='Auction')),
                ('user', models.ForeignKey(help_text='The user who clicked the auction', on_delete=django.db.models.deletion.CASCADE, related_name='auction_clicks', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Auction Click',
                'verbose_name_plural': 'Auction Clicks',
                'unique_together': {('user', 'auction')},
            },
        ),
        migrations.CreateModel(
            name='FavouritesCars',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, help_text='The date when the car was added to favourites', verbose_name='Created Date')),
                ('car', models.ForeignKey(help_text='The car that was added to favourites', on_delete=django.db.models.deletion.CASCADE, related_name='favourited_by', to='cars.car', verbose_name='Car')),
                ('user', models.ForeignKey(help_text='The user who added the car to favourites', on_delete=django.db.models.deletion.CASCADE, related_name='favourites', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Favourite Car',
                'verbose_name_plural': 'Favourite Cars',
                'ordering': ['-created_date'],
                'unique_together': {('user', 'car')},
            },
        ),
    ]
